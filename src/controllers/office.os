#Использовать "../model"

&Авторизовать
Функция Index() Экспорт
	Если ПользователиИнформационнойБазы.ТекущийПользователь() = Неопределено Тогда
		Возврат Перенаправление(АдресДействия("Login"));
	КонецЕсли;
	Параметры = Новый Структура("ТаблицаПакетов", УправлениеКонтентом.ТаблицаПакетов());
	Возврат Представление("Index", Параметры);
КонецФункции

Функция Login() Экспорт
	// TODO: перенести в main.os
	ОбщегоНазначения.ПроверитьИСоздатьПользовательБекОфиса();

	Если ЗапросHttp.Метод = "POST" Тогда
		Пользователь = ПользователиИнформационнойБазы.НайтиПоИмени(ЗапросHttp.ДанныеФормы["Name"]);
		Если Пользователь = Неопределено Тогда
			СостояниеМодели.ДобавитьОшибку("Name","Неверное имя пользователя или пароль");
		Иначе
			Если Не ПользователиИнформационнойБазы.АвторизоватьПоПаролю(Пользователь, ЗапросHttp.ДанныеФормы["Password"]) Тогда
				СостояниеМодели.ДобавитьОшибку("All","Неверное имя пользователя или пароль");
			КонецЕсли;
		КонецЕсли;

		Если СостояниеМодели.Корректно Тогда
			Возврат Перенаправление(АдресДействия("Index"));
		Иначе
			Возврат Представление("LoginForm");
		КонецЕсли;
	Иначе
		Возврат Представление("LoginForm");
	КонецЕсли;

КонецФункции

&Авторизовать
Функция Logout() Экспорт

	ПользователиИнформационнойБазы.СброситьАутентификацию();
	Возврат Перенаправление(АдресДействия("Index"));

КонецФункции

&Авторизовать
Функция MigrationData() Экспорт

	Ожидание = Новый ПараметрыОжиданияФоновыхЗаданий();
	Ожидание.ОжиданиеВСекундах(2);
	РегламентныеЗадания.ВыполнитьОтложенноеЗадание("МиграцияДанных", "ЗапуститьИмпортВБД", Ожидание);
	Возврат Перенаправление(АдресДействия("Index"));

КонецФункции