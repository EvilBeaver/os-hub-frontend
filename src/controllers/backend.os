#Использовать json
#Использовать fs

Перем КаталогПубликации;
Перем ПарсерJSON;
Перем ФорматОтвета;

Функция Push() Экспорт
	
	ТокенАвторизации = ЗапросHttp.Заголовки.Получить("OAUTH-TOKEN");
	ИмяФайла = ЗапросHttp.Заголовки.Получить("FILE-NAME");
	Канал = ЗапросHttp.Заголовки.Получить("CHANNEL");
	ДанныеФайла = ОбщегоНазначения.ДвоичныеДанныеИзHTTPЗапроса(ЗапросHttp);
	
	КаталогПубликации = ОбъединитьПути(ОбщегоНазначения.КаталогПубликации(), ГлобальныйКонтекст.КаталогПакетов);
	ЭтоТестоваяСборка = Не НРег(Канал) = "stable";
	
	Попытка		
		ОбщегоНазначения.ПроверитьКорректностьФайла(ИмяФайла);
		ОписаниеПакета = ОбщегоНазначения.ОписаниеПакета(ИмяФайла);
		Пользователь = ОбщегоНазначения.ПользовательGitHubПоТокену(ТокенАвторизации);
		Если Пользователь = Неопределено Тогда
			ВызватьИсключение("Не удалось получить пользователя github по token");
		КонецЕсли;
		Разрешение = ОбщегоНазначения.ЕстьРазрешениеОтправлятьВРепозиторий(Пользователь.Логин, ОписаниеПакета.Идентификатор);
		Если Не Разрешение Тогда
			ВызватьИсключение Новый ИнформацияОбОшибке("Пользователь не имеет права отправки в репозиторий пакета", 401);
		КонецЕсли;
	Исключение		
		Возврат ВернутьОтвет(
			ОбщегоНазначения.ВычислитьКодОшибки(ИнформацияОбОшибке()), 
			"Ошибка: " + ИнформацияОбОшибке().Описание);
	КонецПопытки;

	// Если тестовая сборка - проверить нет ли релиза с этой версией, если есть - отказать
	Если ЭтоТестоваяСборка Тогда
		ВерсияНайдена = ОбщегоНазначения.ВерсияПакетаНайдена(ОписаниеПакета.Идентификатор, ОписаниеПакета.Версия, Ложь);
		Если ВерсияНайдена Тогда
			ВызватьИсключение Новый ИнформацияОбОшибке("Нельзя публиковать тестовую версию пакета, при наличии такой же версии в релизе.", 401);
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		ОбщегоНазначения.ЗафиксироватьПакет(КаталогПубликации, ДанныеФайла, ИмяФайла, ОписаниеПакета, ЭтоТестоваяСборка);
	Исключение
		Возврат ВернутьОтвет(
			ОбщегоНазначения.ВычислитьКодОшибки(ИнформацияОбОшибке()), 
			"Сохранение пакета: " + ИнформацияОбОшибке().Описание);
	КонецПопытки;
	
	Сообщение = "Push accept";
	Возврат ВернутьОтвет(200, Сообщение);
	
КонецФункции

Функция ВернутьОтвет(КодСостояния, Текст)
	
	ЭтоJSON = ФорматОтвета = "json"; 
	ТипКонтента = ?(ЭтоJSON, "application/json", "text/html");

	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-type", ТипКонтента);
	Заголовки.Вставить("charset", "utf-8");
	ОтветHttp.УстановитьЗаголовки(Заголовки);
	ОтветHttp.КодСостояния = КодСостояния;
	
	Если ЭтоJSON Тогда
		ОбъектJSON = Новый ПарсерJSON();
		Ответ = Новый Структура;
		Ответ.Вставить("КодСостояние", КодСостояния);
		Ответ.Вставить("Сообщение", Текст);
		Контент = ОбъектJSON.ЗаписатьJSON(Ответ);
	Иначе
		Контент = "<html><head><title>All OK</title></head><body>" + Текст + "</body></html>";
	КонецЕсли;
	
	Возврат Содержимое(Контент, КодировкаТекста.UTF8);
	
КонецФункции

ПарсерJSON = Новый ПарсерJSON;
КаталогПубликации = ОбщегоНазначения.КаталогПубликации();
ФорматОтвета = "json"; // xml

