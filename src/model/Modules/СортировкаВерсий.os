
#Использовать strings

Перем МаксимальноеInt32 Экспорт;

Процедура СортироватьВерсии(ВходящиеДанные, ПорядокСортировки = "ВОЗР") Экспорт
	
	Массив = ВходящиеДанные;
	
	КоличествоЭлементовВМассиве = Массив.Количество();
	Если КоличествоЭлементовВМассиве > 0 Тогда
		БыстраяСортировка(Массив, 0, КоличествоЭлементовВМассиве - 1, ПорядокСортировки);
	КонецЕсли;
	
	ВходящиеДанные = Массив;
	
КонецПроцедуры

// Быстрая сортировка из lib semver
Процедура БыстраяСортировка(МассивДанных, ЛевоеЗначение, ПравоеЗначение, Знач ПорядокСортировки = "ВОЗР")
	
	ПорядокСортировки = вРег(ПорядокСортировки);
	
	ЛевоеЗначениеФиксированное = ЛевоеЗначение; //левая граница
	ПравоеЗначениеФиксированное = ПравоеЗначение; // правая граница
	ОпорноеЗначение = МассивДанных[ЛевоеЗначение]; // значение опоры
	
	// пока границы не сомкнутся
	Пока ЛевоеЗначение < ПравоеЗначение Цикл 
		
		// двигаем правую границу до значения, больше(меньше) опорного
		Пока ?(ПорядокСортировки = "ВОЗР", 
			ВерсияБольшеИлиРавна(МассивДанных[ПравоеЗначение], ОпорноеЗначение),
			ВерсияМеньшеИлиРавна(МассивДанных[ПравоеЗначение], ОпорноеЗначение)) И ЛевоеЗначение < ПравоеЗначение Цикл
			
			ПравоеЗначение = ПравоеЗначение - 1;
			
		КонецЦикла;
		
		Если ЛевоеЗначение <> ПравоеЗначение Тогда // если границы не сомкнулись
			МассивДанных[ЛевоеЗначение] = МассивДанных[ПравоеЗначение]; // перемещаем правое на левое
			ЛевоеЗначение = ЛевоеЗначение + 1; // сдвигаем вправо
		КонецЕсли;
		
		// двигаем левую границу до значения, меньше(больше) опорного
		Пока ?(ПорядокСортировки = "ВОЗР", 
			ВерсияМеньшеИлиРавна(МассивДанных[ЛевоеЗначение], ОпорноеЗначение),
			ВерсияБольшеИлиРавна(МассивДанных[ЛевоеЗначение], ОпорноеЗначение)) И ЛевоеЗначение < ПравоеЗначение Цикл
			
			ЛевоеЗначение = ЛевоеЗначение + 1;
			
		КонецЦикла;
		
		// если границы не сомкнулись
		Если ЛевоеЗначение <> ПравоеЗначение Тогда 
			МассивДанных[ПравоеЗначение] = МассивДанных[ЛевоеЗначение]; // перемещаем левое на правое
			ПравоеЗначение = ПравоеЗначение - 1; // сдвигаем вправо 
		КонецЕсли;
		
	КонецЦикла;
	
	// фиксируем
	МассивДанных[ЛевоеЗначение] = ОпорноеЗначение;
	ОпорноеЗначение = ЛевоеЗначение;
	ЛевоеЗначение = ЛевоеЗначениеФиксированное;
	ПравоеЗначение = ПравоеЗначениеФиксированное;
	
	// рекурсивно сортируем две части массива
	Если ЛевоеЗначение < ОпорноеЗначение Тогда 
		БыстраяСортировка(МассивДанных, ЛевоеЗначение, ОпорноеЗначение - 1, ПорядокСортировки);
	КонецЕсли;
	Если ПравоеЗначение > ОпорноеЗначение Тогда
		БыстраяСортировка(МассивДанных, ОпорноеЗначение + 1, ПравоеЗначение, ПорядокСортировки);
	КонецЕсли;
	
КонецПроцедуры

Функция ВерсияБольшеИлиРавна(Версия1, Версия2)
	
	Возврат СравнитьВерсииСУчетомБукв(Версия1, Версия2) >= 0;
	
КонецФункции

Функция ВерсияМеньшеИлиРавна(Версия1, Версия2)
	
	Возврат СравнитьВерсииСУчетомБукв(Версия1, Версия2) <= 0;
	
КонецФункции

Функция СравнитьВерсииСУчетомБукв(Знач ВерсияА, Знач ВерсияБ)
	
	МассивВерсийА = СтрРазделить(ПреобразоватьВерсиюВЦифры(Строка(ВерсияА)), ".");
	МассивВерсийБ = СтрРазделить(ПреобразоватьВерсиюВЦифры(Строка(ВерсияБ)), ".");
	
	КоличествоА = МассивВерсийА.Количество();
	КоличествоБ = МассивВерсийБ.Количество();
	МаксимальноеКоличествоЭлементов = Макс(КоличествоА, КоличествоБ);
	
	Для Индекс = 0 По МаксимальноеКоличествоЭлементов - 1 Цикл
		
		Если КоличествоА - 1 < Индекс Тогда
			ПривестиЗначениеМассива(МассивВерсийА, МассивВерсийБ, Индекс);
		КонецЕсли;
		
		Если КоличествоБ - 1 < Индекс Тогда
			ПривестиЗначениеМассива(МассивВерсийБ, МассивВерсийА, Индекс);
		КонецЕсли;
		
		МассивВерсийА[Индекс] = СтроковыеФункции.СтрокаВЧисло(МассивВерсийА[Индекс]);
		МассивВерсийБ[Индекс] = СтроковыеФункции.СтрокаВЧисло(МассивВерсийБ[Индекс]);
		
		Если МассивВерсийА[Индекс] > МассивВерсийБ[Индекс] Тогда
			Возврат 1;
		КонецЕсли;
		
		Если МассивВерсийА[Индекс] < МассивВерсийБ[Индекс] Тогда
			Возврат -1;
		КонецЕсли; 
		
	КонецЦикла;
	
	Возврат 0;
	
КонецФункции

Процедура ПривестиЗначениеМассива(МассивВерсийА, МассивВерсийБ, Индекс)
	Если СтроковыеФункции.СтрокаВЧисло(МассивВерсийБ[Индекс]) < 0 Тогда
		МассивВерсийА.Добавить("-" + МаксимальноеInt32);
	Иначе
		МассивВерсийА.Добавить("0");	
	КонецЕсли;
КонецПроцедуры

Функция ПреобразоватьВерсиюВЦифры(Знач Значение)
	
	НовоеЗначение = "";
	Для НомерСимвола = 1 По СтрДлина(Значение) Цикл
		Символ = Сред(Значение, НомерСимвола, 1);
		Если Символ = "." Или СтроковыеФункции.ТолькоЦифрыВСтроке(Символ) Тогда // проще
			НовоеЗначение = НовоеЗначение + Символ;
		Иначе
			НовоеЗначение = НовоеЗначение + СтрШаблон(".%1.", КодСимвола(Лев(НРег(Символ), 1)) - МаксимальноеInt32);
		КонецЕсли;
	КонецЦикла;
	
	Возврат НовоеЗначение;
	
КонецФункции

МаксимальноеInt32 = 2147483647;