
Процедура СортироватьВерсии(ВходящиеДанные, ПорядокСортировки = "ВОЗР") Экспорт
	
	Массив = ВходящиеДанные;
	
	КоличествоЭлементовВМассиве = Массив.Количество();
	Если КоличествоЭлементовВМассиве > 0 Тогда
		БыстраяСортировка(Массив, 0, КоличествоЭлементовВМассиве - 1, ПорядокСортировки);
	КонецЕсли;
	
	ВходящиеДанные = Массив;
	
КонецПроцедуры

// сортировка из semver
Процедура БыстраяСортировка(МассивДанных, ЛевоеЗначение, ПравоеЗначение, Знач ПорядокСортировки = "ВОЗР")
	
	ПорядокСортировки = вРег(ПорядокСортировки);
	
	ЛевоеЗначениеФиксированное = ЛевоеЗначение; //левая граница
	ПравоеЗначениеФиксированное = ПравоеЗначение; // правая граница
	ОпорноеЗначение = МассивДанных[ЛевоеЗначение]; // значение опоры
	
	// пока границы не сомкнутся
	Пока ЛевоеЗначение < ПравоеЗначение Цикл 
		
		// двигаем правую границу до значения, больше(меньше) опорного
		Пока ?(ПорядокСортировки = "ВОЗР", 
			ВерсияБольшеИлиРавна(МассивДанных[ПравоеЗначение], ОпорноеЗначение),
			ВерсияМеньшеИлиРавна(МассивДанных[ПравоеЗначение], ОпорноеЗначение)) И ЛевоеЗначение < ПравоеЗначение Цикл
			
			ПравоеЗначение = ПравоеЗначение - 1;
			
		КонецЦикла;
		
		Если ЛевоеЗначение <> ПравоеЗначение Тогда // если границы не сомкнулись
			МассивДанных[ЛевоеЗначение] = МассивДанных[ПравоеЗначение]; // перемещаем правое на левое
			ЛевоеЗначение = ЛевоеЗначение + 1; // сдвигаем вправо
		КонецЕсли;
		
		// двигаем левую границу до значения, меньше(больше) опорного
		Пока ?(ПорядокСортировки = "ВОЗР", 
			ВерсияМеньшеИлиРавна(МассивДанных[ЛевоеЗначение], ОпорноеЗначение),
			ВерсияБольшеИлиРавна(МассивДанных[ЛевоеЗначение], ОпорноеЗначение)) И ЛевоеЗначение < ПравоеЗначение Цикл
			
			ЛевоеЗначение = ЛевоеЗначение + 1;
			
		КонецЦикла;
		
		// если границы не сомкнулись
		Если ЛевоеЗначение <> ПравоеЗначение Тогда 
			МассивДанных[ПравоеЗначение] = МассивДанных[ЛевоеЗначение]; // перемещаем левое на правое
			ПравоеЗначение = ПравоеЗначение - 1; // сдвигаем вправо 
		КонецЕсли;
		
	КонецЦикла;
	
	// фиксируем
	МассивДанных[ЛевоеЗначение] = ОпорноеЗначение;
	ОпорноеЗначение = ЛевоеЗначение;
	ЛевоеЗначение = ЛевоеЗначениеФиксированное;
	ПравоеЗначение = ПравоеЗначениеФиксированное;
	
	// рекурсивно сортируем две части массива
	Если ЛевоеЗначение < ОпорноеЗначение Тогда 
		БыстраяСортировка(МассивДанных, ЛевоеЗначение, ОпорноеЗначение - 1, ПорядокСортировки);
	КонецЕсли;
	Если ПравоеЗначение > ОпорноеЗначение Тогда
		БыстраяСортировка(МассивДанных, ОпорноеЗначение + 1, ПравоеЗначение, ПорядокСортировки);
	КонецЕсли;
	
КонецПроцедуры

Функция ВерсияБольшеИлиРавна(Версия1, Версия2)
	
	Возврат СравнитьКоллекциюВерсий(Версия1, Версия2);
	
КонецФункции

Функция ВерсияМеньшеИлиРавна(Версия1, Версия2)

	Возврат СравнитьКоллекциюВерсий(Версия1, Версия2, -1);

КонецФункции

Функция СравнитьКоллекциюВерсий(Версия1, Версия2, Направление = 1) // -1 меньше

	Если Версия1 = Версия2 Тогда
		Возврат Истина;
	КонецЕсли;
	
	Результат = Ложь;
	
	Коллекция1 = СтрРазделить(Версия1, ".");
	Коллекция2 = СтрРазделить(Версия2, ".");

	Количество1 = Коллекция1.Количество();
	Количество2 = Коллекция2.Количество();
	
	МаксимальноеКоличество = Макс(Количество1, Количество2);
	Для Порядок = 0 По МаксимальноеКоличество - 1 Цикл

		Попытка
			Значение1 = Коллекция1[Порядок];
		Исключение
			Значение1 = "0";
		КонецПопытки;
		Попытка
			Значение2 = Коллекция2[Порядок];
		Исключение
			Значение2 = "0";
		КонецПопытки;
		
		Если Значение1 = Значение2  Тогда
			
			Если Порядок = МаксимальноеКоличество - 1  Тогда
				Результат = Истина;
				Прервать;
			Иначе
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		ЕстьСимволы = Ложь;
		
		Если ЕстьСимволы Тогда
			
			// TODO: делиим на числа и буквы и их проверяем
			
		Иначе
			
			Попытка
				Число1 = Число(Значение1);
			Исключение
				Сообщить("Версия " + Версия1);
				ВызватьИсключение(ОписаниеОшибки());
			КонецПопытки;
			Попытка
				Число2 = Число(Значение2);
			Исключение
				Сообщить("Версия " + Версия2);
				ВызватьИсключение(ОписаниеОшибки());
			КонецПопытки;
			//Число2 = Число(Значение2);
			
			Если Число1 = Число2 Тогда
				Если Порядок = МаксимальноеКоличество - 1  Тогда
					Результат = Истина;
					Прервать;
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если Число1 > Число2 Тогда
				Результат = Направление > 0;
				Прервать;
			КонецЕсли;
			
			Если Число1 < Число2 Тогда
				Результат = Направление < 0;
				Прервать;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции