
Перем КаталогХраненияПакетов;

Функция ТаблицаПакетов() Экспорт
	
	Коннектор = МенеджерБазыДанных.МенеджерСущностей.ПолучитьКоннектор();
	
	SQLЗапрос = "SELECT 
	|	СписокПакетов.Код AS ИмяПакета, 
	|	СписокПакетов.Наименование AS Название, 
	|	СписокПакетов.Описание,  
	|	СписокПакетов.КлючевыеСлова, 
	|	СписокПакетов.СсылкаНаПроект AS АдресРепозитория, 
	|	ПакетыРелиз.АктуальнаяВерсия,
	|	Авторы.Имя AS Автор
	|	FROM Пакеты as СписокПакетов 
	|	INNER JOIN ПакетыКаналов AS ПакетыРелиз ON СписокПакетов.Код=ПакетыРелиз.Пакет AND ПакетыРелиз.Канал=@Канал
	|	LEFT JOIN Авторы ON СписокПакетов.Автор=Авторы.Код
	|	ORDER BY СписокПакетов.Наименование;";
	
	Запрос = Коннектор.КонструкторКоннектора.НовыйЗапрос(Коннектор.Соединение);
	Запрос.Текст = SQLЗапрос;
	Запрос.УстановитьПараметр("Канал", 1);
	
	Попытка
		Таблица = Запрос.Выполнить().Выгрузить();
	Исключение
		Таблица = ШаблонТаблицыПакетов();
		Сообщить(ОписаниеОшибки()); // в логирование
	КонецПопытки;
	
	Возврат Таблица;
	
КонецФункции

Функция ШаблонТаблицыПакетов()
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИмяПакета");
	Таблица.Колонки.Добавить("Название");
	Таблица.Колонки.Добавить("Описание");
	Таблица.Колонки.Добавить("Автор");
	Таблица.Колонки.Добавить("КлючевыеСлова");
	Таблица.Колонки.Добавить("АктуальнаяВерсия");
	Таблица.Колонки.Добавить("АдресРепозитория");
	Возврат Таблица;
КонецФункции

Функция ДанныеПакетаПоКоду(Код) Экспорт
	
	Данные = Новый Структура();
	Данные.Вставить("Название");
	Данные.Вставить("Описание");
	Данные.Вставить("Автор");
	Данные.Вставить("КлючевыеСлова");
	Данные.Вставить("ПутьХранения");
	Данные.Вставить("Версии", Новый Массив);
	Данные.Вставить("АктуальнаяВерсия");
	Данные.Вставить("АдресРепозитория");
	
	Отбор = Новый Соответствие();
	Отбор.Вставить("Имя", "stable");
	Канал = МенеджерБазыДанных.МенеджерСущностей.ПолучитьОдно(Тип("Канал"), Отбор);
	
	Пакет = МенеджерБазыДанных.МенеджерСущностей.ПолучитьОдно(Тип("Пакет"), Код);
	Если Пакет = Неопределено Тогда
		Возврат Данные;
	КонецЕсли;
	
	Отбор = Новый Соответствие();
	Отбор.Вставить("Канал", Канал.Код);
	Отбор.Вставить("Пакет", Пакет.Код);
	ПакетКанала = МенеджерБазыДанных.МенеджерСущностей.ПолучитьОдно(Тип("ПакетКанала"), Отбор);
	
	Если ПакетКанала = Неопределено Тогда
		Возврат Данные;
	КонецЕсли;
	
	Данные.Название = Пакет.Наименование;
	Данные.Описание = Пакет.Описание;
	Автор = Пакет.Автор;
	Если ЗначениеЗаполнено(Автор) Тогда
		Данные.Автор = Автор.Имя;
	КонецЕсли;
	Данные.КлючевыеСлова = Пакет.КлючевыеСлова;
	Данные.ПутьХранения = ОбъединитьПути(КаталогХраненияПакетов(), Канал.Каталог, Пакет.Код);
	
	КоллекцияВерсий = Новый Массив;
	// получаем список версий
	Отбор = Новый Соответствие;
	Отбор.Вставить("ПакетКанала", ПакетКанала.Код); // TODO: хотелось бы ПакетКанала = ПакетКанала
	РезультатПоискаВерсий = МенеджерБазыДанных.МенеджерСущностей.Получить(Тип("ВерсияПакета"), Отбор);
	
	ТаблицаВерсий = Новый ТаблицаЗначений;
	ТаблицаВерсий.Колонки.Добавить("НомерВерсии");
	ТаблицаВерсий.Колонки.Добавить("ДатаВерсии");
	
	Для Каждого Версия Из РезультатПоискаВерсий Цикл
		НоваяСтрока = ТаблицаВерсий.Добавить();
		НоваяСтрока.НомерВерсии = Версия.Номер;
		НоваяСтрока.ДатаВерсии = Версия.ДатаОбновления;
	КонецЦикла;
	
	МассивВерсий = ТаблицаВерсий.ВыгрузитьКолонку("НомерВерсии");
	СортировкаВерсий.СортироватьВерсии(МассивВерсий, "Убыв");
	
	Для Каждого ЭлементВерсии Из МассивВерсий Цикл
		
		СтрокаРезультата = ТаблицаВерсий.Найти(ЭлементВерсии, "НомерВерсии");	
		Версия = Новый Структура("НомерВерсии, ДатаВерсии");
		Версия.НомерВерсии = СтрокаРезультата.НомерВерсии;
		Версия.ДатаВерсии = СтрокаРезультата.ДатаВерсии;
		КоллекцияВерсий.Добавить(Версия);
		
	КонецЦикла;
	
	Данные.Версии = КоллекцияВерсий;
	Данные.АдресРепозитория = Пакет.СсылкаНаПроект;
	Данные.АктуальнаяВерсия = ПакетКанала.АктуальнаяВерсия;
	
	Возврат Данные;
	
КонецФункции

Функция КаталогХраненияПакетов() Экспорт

	Если КаталогХраненияПакетов = Неопределено Тогда
		КаталогХраненияСреда = ПолучитьПеременнуюСреды("OSHUB_BINARY_ROOT");
		Каталог = Новый Файл(КаталогХраненияСреда);
		КаталогХраненияПакетов = Каталог.ПолноеИмя;
	КонецЕсли;

	Возврат КаталогХраненияПакетов;

КонецФункции

Функция ПолучитьСодержимоеReadme(Путь) Экспорт

	ФайлДокументации = ОбъединитьПути(Путь, "readme.md");
	Если Не ФС.ФайлСуществует(ФайлДокументации) Тогда
		Возврат "<p>Автор не предоставил файл README</p>";
	КонецЕсли;
	Парсер = Новый ПарсерРазметкиMD();
	Парсер.ВключитьРасширения = Истина;

	ЧтениеТекста = Новый ЧтениеТекста(ФайлДокументации,КодировкаТекста.UTF8NoBOM);
	Текст = ЧтениеТекста.Прочитать();
	Разметка = Парсер.СоздатьHTML(Текст);
	
	ЧтениеТекста.Закрыть();
	
	Возврат Разметка;

КонецФункции