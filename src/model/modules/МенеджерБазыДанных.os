#Использовать entity

Перем МенеджерСущностей Экспорт;

Перем АвторыМенеджер Экспорт;
Перем НастройкиМенеджер Экспорт;
Перем КаналыМенеджер Экспорт;
Перем ВерсииПакетовМенеджер Экспорт;
Перем ПакетыМенеджер Экспорт;
Перем ЗависимостиМенеджер Экспорт;

Процедура Инициализировать() Экспорт
	
	ПутьКБазеДанныхПродакшена = ОбъединитьПути(ПолучитьПеременнуюСреды("OSHUB_BINARY_ROOT"), "download", "hub-stable.db");
	Сообщить("Путь к бд: " + ПутьКБазеДанныхПродакшена, СтатусСообщения.ОченьВажное);
	МенеджерСущностей = Новый МенеджерСущностей(
			Тип("КоннекторSQLite"), 
			СтрШаблон("Data Source=%1;", ПутьКБазеДанныхПродакшена));

	// МенеджерСущностей = Новый МенеджерСущностей(Тип("КоннекторSQLite"), "Data Source=:memory:");
	//МенеджерСущностей = Новый МенеджерСущностей(Тип("КоннекторSQLite"), "Data Source=:memory:");
	//МенеджерСущностей = Новый МенеджерСущностей(Тип("КоннекторJSON"), "data.json");

	МенеджерСущностей.ДобавитьКлассВМодель(Тип("Настройка"));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("Канал"));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("Автор"));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("Зависимость"));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("Пакет"));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("ВерсияПакета"));
	МенеджерСущностей.Инициализировать();

	АвторыМенеджер = МенеджерСущностей.ПолучитьХранилищеСущностей(Тип("Автор"));
	КаналыМенеджер = МенеджерСущностей.ПолучитьХранилищеСущностей(Тип("Канал"));
	ВерсииПакетовМенеджер = МенеджерСущностей.ПолучитьХранилищеСущностей(Тип("ВерсияПакета"));
	ПакетыМенеджер = МенеджерСущностей.ПолучитьХранилищеСущностей(Тип("Пакет"));
	НастройкиМенеджер = МенеджерСущностей.ПолучитьХранилищеСущностей(Тип("Настройка"));
	ЗависимостиМенеджер = МенеджерСущностей.ПолучитьХранилищеСущностей(Тип("Зависимость"));
	
КонецПроцедуры

// Инициализировать();