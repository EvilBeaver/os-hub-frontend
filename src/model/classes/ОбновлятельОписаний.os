#Использовать restler
#Использовать tempfiles
#Использовать logos
#Использовать fs

Перем Лог;

Перем ТокенАвторизации;
Перем мКаталогСкачивания;

Функция ПолучитьСоединениеGithub()
	Сервер = "https://api.github.com";
	_Соединение = Новый HTTPСоединение(Сервер);
	
	Возврат _Соединение;
КонецФункции

Функция ПолучитьЗаголовкиЗапросаGithub()
	
	_Заголовки = Новый Соответствие();
	_Заголовки.Вставить("Accept", "application/vnd.github.v3+json");
	_Заголовки.Вставить("User-Agent", "oscript-library-autobuilder");
	
	Возврат _Заголовки;
	
КонецФункции

Функция ПрочестьСекретныйПараметр(ИмяПараметра)

	ЗначениеПеременной = ПолучитьПеременнуюСреды(ИмяПараметра);
	Возврат Строка(ЗначениеПеременной); // неопределено в строку

КонецФункции

Процедура Инициализация(Знач КаталогСкачивания) Экспорт
	ПарсерJSON = Новый ПарсерJSON;
	мКаталогСкачивания = КаталогСкачивания;
	ФС.ОбеспечитьКаталог(КаталогСкачивания);
	Лог = Логирование.ПолучитьЛог("oscript.hub-backend.log");
КонецПроцедуры

Процедура ПолезнаяРабота() Экспорт

	Соединение = ПолучитьСоединениеGithub();
	Заголовки = ПолучитьЗаголовкиЗапросаGithub();

	КлиентВебAPI = Новый КлиентВебAPI();
	КлиентВебAPI.ИспользоватьСоединение(Соединение);
	КлиентВебAPI.УстановитьЗаголовки(Заголовки);

	РесурсСписокРепозиториев = "/orgs/oscript-library/repos";

	Лог.Информация("Запрашиваю список репозиториев");
	СписокРепозиториев = КлиентВебAPI.Получить(РесурсСписокРепозиториев);	
	Для Каждого ДанныеРепозитория Из СписокРепозиториев Цикл
		Лог.Информация("Получаю README для " + ДанныеРепозитория["name"]);
		АдресОписанияREADME = СтрШаблон("/repos/oscript-library/%1/readme", ДанныеРепозитория["name"]);
		Попытка
			Описание = КлиентВебAPI.Получить(АдресОписанияREADME);
		Исключение
			Лог.Ошибка("Не удалось получить описание для " + ДанныеРепозитория["name"]);
		КонецПопытки;
		ПутьКФайлу = ОбъединитьПути(мКаталогСкачивания, ДанныеРепозитория["name"]);
		Двоичные = base64Значение(Описание["content"]);
		Двоичные.Записать(ПутьКФайлу);
	КонецЦикла;

КонецПроцедуры